
import javax.swing.JOptionPane;

import jdk.nashorn.internal.runtime.regexp.joni.constants.CCVALTYPE;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ASUS
 */


public class main extends javax.swing.JFrame {
    
    /**
     * Creates new form main
     */
    public main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txt_search = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txt_search1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nhập vị trí số Fibonaci cần tìm:");

        txt_search.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        btn_search.setText("Tìm");
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });

        jLabel2.setText("Kết quả");

        txt_search1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_search1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 15, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_search)
                                .addGap(36, 36, 36)
                                .addComponent(btn_search)))
                        .addGap(339, 339, 339))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_search))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_search1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        txt_search.getAccessibleContext().setAccessibleParent(txt_search);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        StringBuilder sb = new StringBuilder();   
        String num = txt_search.getText(); //get text from text_search
        if (num.equals("")){
            sb.append("Nhap vi tri tim kiem!"); 
            JOptionPane.showMessageDialog(this, sb.toString());
            return;
        }
        else {
            try {
                int n = Integer.parseInt(num);
                if (n < 0){
                    sb.append("Nhap vi tri tim kiem co gia tri duong!"); 
                    JOptionPane.showMessageDialog(this, sb.toString());
                    return;
                }
                
                if(n == 1 || n == 2){
                    txt_search1.setText("1");     
                }
                else {
                    fibonacci a1 = new fibonacci();
                    fibonacci a2 = new fibonacci();
                    int i = 3;
                    fibonacci a = new fibonacci();
                    while (i <= n)
                    {
                        a = add(a1,a2);
                        a1 = assign(a1,a2);
                        a2 = assign(a2,a);
                        i++;
                    }
                    txt_search1.setText(Fib2String(a).toString()); 
                    return;
                }
        
            } catch (Exception e){
                    sb.append("Nhap vi tri tim kiem la so nguyen duong!"); 
                    JOptionPane.showMessageDialog(this, sb.toString());
                    return;
            }
        }      
    }//GEN-LAST:event_btn_searchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_search1;
    // End of variables declaration//GEN-END:variables

    private fibonacci add(fibonacci fib1, fibonacci fib2) {
        int cf =  0; // co tran so phep cong sang bit 29
        int del = 0xFFFFFFF; // xoa bit tran thu 29
        fibonacci fib3 = new fibonacci();
        for(int i = 0; i < 108; i++){
            fib3.num[i] = fib1.num[i] + fib2.num[i] + cf;
            if ( (fib3.num[i] >> 28) == 1){
                cf = 1;
                fib3.num[i] = fib3.num[i] & del;
            }
            else    
                cf = 0;
        }
        return fib3;
    }

    private fibonacci assign(fibonacci fib1, fibonacci fib2) {
        for (int i = 0; i < 108; i++){
            fib1.num[i] = fib2.num[i];
        }
        return fib1;
    }

    private StringBuilder Fib2String(fibonacci fib) {
       StringBuilder sb = new StringBuilder();
        sb.append("0x");
        int index = 108;
        for (int i = 107; i >= 0; --i){
            if ( fib.num[i] != 0){
                index = i;
                break;
            }
        }
        for (int i = index; i >= 0 ; --i ){
             sb.append(dec2hex(fib.num[i]));
        }
        return sb;
    }
    public String dec2hex (int num){
        StringBuilder sb = new StringBuilder();
        for (int i = 6 ; i >= 0; --i){
            sb.append(num2hex((num >> (i*4)) & 0x0000000F));
        }
        return sb.toString();
    }
    public String num2hex (int num){
        String str = null;
        switch (num) {
        case 0:
            str = "0";
            break;
        case 1:
            str = "1";
            break;
        case 2:
            str = "2";
            break;
        case 3:
            str = "3";
            break;
        case 4:
            str = "4";
            break;
        case 5:
            str = "5";
            break;
        case 6:
            str = "6";
            break;
        case 7:
            str = "7";
            break;
        case 8:
            str = "8";
            break;
        case 9:
            str = "9";
            break;
        case 10:
            str = "A";
            break;
        case 11:
            str = "B";
            break;
        case 12:
            str = "C";
            break;
        case 13:
            str = "D";
            break;
        case 14:
            str = "E";
            break;
        case 15:
            str = "F";
            break;
        default:
            System.out.println("Not in 0:15");
        }    
        return str;
    }
}
